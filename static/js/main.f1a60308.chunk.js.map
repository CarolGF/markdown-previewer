{"version":3,"sources":["components/App.js","index.js"],"names":["marked","require","setOptions","breaks","gfm","placeholder","App","state","markdown","updateMarkdown","setState","handleChange","event","target","value","this","id","onChange","dangerouslySetInnerHTML","__html","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAGMA,G,MAASC,EAAQ,KAEvBD,EAAOE,WAAW,CAChBC,QAAQ,EACRC,KAAK,IAGP,IAAMC,EAAW,47BA8EFC,E,4MArCbC,MAAQ,CACNC,SAAUH,G,EAGZI,eAAiB,SAACD,GAChB,EAAKE,SAAS,CAAEF,c,EAGlBG,aAAe,SAACC,GACd,EAAKH,eAAeG,EAAMC,OAAOC,Q,uDAGzB,IACAN,EAAaO,KAAKR,MAAlBC,SACR,OACE,6BACE,6BACE,sCACA,8BACEQ,GAAG,SACHF,MAAON,EACPH,YAAY,iBACZY,SAAUF,KAAKJ,gBAGnB,6BACE,yCACA,yBACEK,GAAG,UACHE,wBAAyB,CAAEC,OAAQnB,EAAOQ,Y,GA9BpCY,aC9ClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f1a60308.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nconst marked = require(\"marked\");\n\nmarked.setOptions({\n  breaks: true,\n  gfm: true,\n});\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n\nclass App extends Component {\n  state = {\n    markdown: placeholder,\n  };\n\n  updateMarkdown = (markdown) => {\n    this.setState({ markdown });\n  };\n\n  handleChange = (event) => {\n    this.updateMarkdown(event.target.value);\n  };\n\n  render() {\n    const { markdown } = this.state;\n    return (\n      <div>\n        <div>\n          <h1>Editor</h1>\n          <textarea\n            id='editor'\n            value={markdown}\n            placeholder='Enter Markdown'\n            onChange={this.handleChange}\n          ></textarea>\n        </div>\n        <div>\n          <h1>Previewer</h1>\n          <div\n            id='preview'\n            dangerouslySetInnerHTML={{ __html: marked(markdown) }}\n          ></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}